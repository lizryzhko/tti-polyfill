{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/global] "," [synthetic:util/defines] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/arrayfromiterable] ","src/activityTrackerUtils.js","src/debug.js","src/firstConsistentlyInteractiveCore.js","src/firstConsistentlyInteractiveDetector.js","src/umd-wrapper.js","src/index.js"],"names":["uniqueId","patchXMLHTTPRequest","beforeXHRSendCb","onRequestCompletedCb","send","XMLHttpRequest","prototype","requestId","XMLHttpRequest.prototype.send","addEventListener","readyState","apply","args","patchFetch","beforeRequestCb","afterRequestCb","originalFetch","window","fetch","window.fetch","Promise","resolve","reject","then","value","err","requestCreatingNodeNames","subtreeContainsNodeName","nodes","nodeNames","node","includes","nodeName","toLowerCase","children","observeResourceFetchingMutations","callback","mutationObserver","MutationObserver","mutations","mutation","type","addedNodes","target","tagName","observe","document","attributes","childList","subtree","attributeFilter","log","console","computeLastKnownNetwork2Busy","incompleteRequestStarts","observedResourceRequests","length","performance","now","endpoints","req","push","timestamp","start","end","ts","sort","a","b","currentActive","i","endpoint","Error","constructor","FirstConsistentlyInteractiveDetector","config","_useMutationObserver","useMutationObserver","_minValue","minValue","ttiPropName","snippetEntries","e","snippetObserver","o","_longTasks","map","performanceEntry","startTime","duration","disconnect","_networkRequests","_incompleteJSInitiatedRequestStartTimes","Map","_timerId","_timerActivationTime","Infinity","_scheduleTimerTasks","_mutationObserver","_performanceObserver","_firstConsistentlyInteractiveResolver","_registerListeners","getFirstConsistentlyInteractive","startSchedulingTimerTasks","lastLongTaskEnd","lastKnownNetwork2Busy","firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy","_incompleteRequestStarts","rescheduleTimer","Math","max","setMinValue","earliestTime","clearTimeout","setTimeout","_checkTTI","disable","_unregisterListeners","_registerPerformanceObserver","PerformanceObserver","entryList","entries","getEntries","entry","entryType","_networkRequestFinishedCallback","_longTaskFinishedCallback","entryTypes","activityTrackerUtils.patchXMLHTTPRequest","_beforeJSInitiatedRequestCallback","bind","_afterJSInitiatedRequestCallback","activityTrackerUtils.patchFetch","activityTrackerUtils.observeResourceFetchingMutations","_mutationObserverCallback","set","size","delete","fetchStart","responseEnd","taskEndTime","mutationRecord","_getMinValue","timing","domContentLoadedEventEnd","navigationStart","lastBusy","searchStart","chrome","firstPaint","loadTimes","firstPaintTime","currentTime","maybeFCI","longTasks","values","moduleExport","opts","detector","module","exports","define","amd","ttiPolyfill"],"mappings":"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","file":"","sourcesContent":[null,null,null,null,null,null,null,null,"// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nlet uniqueId = 0;\n\n\n/**\n * Overrides the native XHR send method in order to keep track of in-flight\n * network requests.\n * @param {!Function} beforeXHRSendCb\n * @param {!Function} onRequestCompletedCb\n */\nexport function patchXMLHTTPRequest(beforeXHRSendCb, onRequestCompletedCb) {\n  const send = XMLHttpRequest.prototype.send;\n  const requestId = uniqueId++;\n\n  XMLHttpRequest.prototype.send = function(...args) { // No arrow function.\n    beforeXHRSendCb(requestId);\n    this.addEventListener('readystatechange', () => {\n      // readyState 4 corresponds to 'DONE'\n      if (this.readyState === 4) onRequestCompletedCb(requestId);\n    });\n    return send.apply(this, args);\n  };\n}\n\n\n/**\n * Overrides the native fetch() in order to keep track of in-flight network\n * requests.\n * @param {!Function} beforeRequestCb\n * @param {!Function} afterRequestCb\n */\nexport function patchFetch(beforeRequestCb, afterRequestCb) {\n  const originalFetch = window.fetch;\n\n  // TODO(philipwalton): assign this to a property of the global variable\n  // explicitely rather than implicitely.\n  // eslint-disable-next-line no-global-assign\n  window.fetch = (...args) => {\n    return new Promise((resolve, reject) => {\n      const requestId = uniqueId++;\n      beforeRequestCb(requestId);\n      originalFetch(...args).then(\n          (value) => {\n            afterRequestCb(requestId);\n            resolve(value);\n          },\n          (err) => {\n            afterRequestCb(requestId);\n            reject(err);\n          });\n    });\n  };\n}\n\n\n/** @type {!Array<string>} */\nconst requestCreatingNodeNames =\n    ['img', 'script', 'iframe', 'link', 'audio', 'video', 'source'];\n\n\n/**\n * Determines if a node or its descendants match one of the passed node names.\n * @param {!Array<!Node>|!NodeList<!Node>} nodes\n * @param {!Array<string>} nodeNames\n * @return {boolean}\n */\nfunction subtreeContainsNodeName(nodes, nodeNames) {\n  for (const node of nodes) {\n    if (nodeNames.includes(node.nodeName.toLowerCase()) ||\n        subtreeContainsNodeName(node.children, nodeNames)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\n/**\n * Start observing DOM mutations for added nodes that may initiate network\n * requests.\n * @param {!Function} callback\n * @return {!MutationObserver}\n */\nexport function observeResourceFetchingMutations(callback) {\n  const mutationObserver = new MutationObserver((mutations) => {\n    // Typecast to fix: https://github.com/google/closure-compiler/issues/2539\n    // eslint-disable-next-line no-self-assign\n    mutations = /** @type {!Array<!MutationRecord>} */ (mutations);\n\n    for (const mutation of mutations) {\n      if (mutation.type == 'childList' &&\n          subtreeContainsNodeName(\n              mutation.addedNodes, requestCreatingNodeNames)) {\n        callback(mutation);\n      } else if (mutation.type == 'attributes' &&\n          requestCreatingNodeNames.includes(\n              mutation.target.tagName.toLowerCase())) {\n        callback(mutation);\n      }\n    }\n  });\n\n  mutationObserver.observe(document, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    attributeFilter: ['href', 'src'],\n  });\n\n  return mutationObserver;\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @define {boolean}\n */\nlet DEBUG = true;\n\n\n/**\n * Prints a log statement to the console if the DEBUG flag is true.\n * @param {...*} args\n */\nexport const log = (...args) => {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log(...args);\n  }\n};\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Computes the first consistently interactive value...\n * @param {number} searchStart\n * @param {number} minValue\n * @param {number} lastKnownNetwork2Busy\n * @param {number} currentTime\n * @param {!Array<{start: (number), end: (number)}>} longTasks\n * @return {number|null}\n */\nexport const computeFirstConsistentlyInteractive =\n    (searchStart, minValue, lastKnownNetwork2Busy, currentTime, longTasks) => {\n  // Have not reached network 2-quiet yet.\n  if ((currentTime - lastKnownNetwork2Busy) < 5000) return null;\n\n  const maybeFCI = longTasks.length === 0 ?\n      searchStart : longTasks[longTasks.length - 1].end;\n\n  // Main thread has not been quiet for long enough.\n  if (currentTime - maybeFCI < 5000) return null;\n\n  return Math.max(maybeFCI, minValue);\n};\n\n\n/**\n * Computes the time (in milliseconds since requestStart) that the network was\n * last known to have >2 requests in-flight.\n * @param {!Array<number>} incompleteRequestStarts\n * @param {!Array<{start: (number), end: (number)}>} observedResourceRequests\n * @return {number}\n */\nexport const computeLastKnownNetwork2Busy =\n      (incompleteRequestStarts, observedResourceRequests) => {\n  if (incompleteRequestStarts.length > 2) return performance.now();\n\n  const endpoints = [];\n  for (const req of observedResourceRequests) {\n    endpoints.push({\n      timestamp: req.start,\n      type: 'requestStart',\n    });\n    endpoints.push({\n      timestamp: req.end,\n      type: 'requestEnd',\n    });\n  }\n\n  for (const ts of incompleteRequestStarts) {\n    endpoints.push({\n      timestamp: ts,\n      type: 'requestStart',\n    });\n  }\n\n  endpoints.sort((a, b) => a.timestamp - b.timestamp);\n\n  let currentActive = incompleteRequestStarts.length;\n\n  for (let i = endpoints.length - 1; i >= 0; i--) {\n    const endpoint = endpoints[i];\n    switch (endpoint.type) {\n      case 'requestStart':\n        currentActive--;\n        break;\n      case 'requestEnd':\n        currentActive++;\n        if (currentActive > 2) {\n          return endpoint.timestamp;\n        }\n        break;\n      default:\n        throw Error('Internal Error: This should never happen');\n    }\n  }\n\n  // If we reach here, we were never network 2-busy.\n  return 0;\n};\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global PerformanceObserver */\n\n\nimport * as activityTrackerUtils from './activityTrackerUtils.js';\nimport {log} from './debug.js';\nimport * as firstConsistentlyInteractiveCore\n    from './firstConsistentlyInteractiveCore.js';\n\n\n/**\n * Class to detect first consistently interactive.\n */\nexport default class FirstConsistentlyInteractiveDetector {\n  /**\n   * @param {!FirstConsistentlyInteractiveDetectorInit=} config\n   */\n  constructor(config = {}) {\n    this._useMutationObserver = !!config.useMutationObserver;\n\n    // If minValue is null, by default it is DOMContentLoadedEnd.\n    this._minValue = config.minValue || null;\n\n    const ttiPropName = config.ttiPropName || '__tti';\n\n    /** @type {Array<PerformanceEntry>|undefined} */\n    const snippetEntries = window[ttiPropName] && window[ttiPropName].e;\n\n    /** @type {PerformanceObserver|undefined} */\n    const snippetObserver = window[ttiPropName] && window[ttiPropName].o;\n\n    // If we recorded some long tasks before this class was initialized,\n    // consume them now.\n    if (snippetEntries) {\n      log(`Consuming the long task entries already recorded.`);\n\n      this._longTasks = snippetEntries.map((performanceEntry) => {\n        return {\n          start: performanceEntry.startTime,\n          end: performanceEntry.startTime + performanceEntry.duration,\n        };\n      });\n    } else {\n      this._longTasks = [];\n    }\n\n    // If we had a long task observer attached by the snippet, disconnect it\n    // here. We will be adding a new long task observer soon with a more\n    // complex callback.\n    if (snippetObserver) {\n      snippetObserver.disconnect();\n    }\n\n    this._networkRequests = [];\n    this._incompleteJSInitiatedRequestStartTimes = new Map();\n\n    this._timerId = null;\n    this._timerActivationTime = -Infinity;\n\n    // Timer tasks are only scheduled when detector is enabled.\n    this._scheduleTimerTasks = false;\n\n    /** @type {?Function} */\n    this._firstConsistentlyInteractiveResolver = null;\n\n    /** @type {?PerformanceObserver} */\n    this._performanceObserver = null;\n\n    /** @type {?MutationObserver} */\n    this._mutationObserver = null;\n\n    this._registerListeners();\n  }\n\n  /**\n   * Starts checking for a first consistently interactive time and returns a\n   * promise that resolves to the found time.\n   * @return {!Promise<number>}\n   */\n  getFirstConsistentlyInteractive() {\n    return new Promise((resolve, reject) => {\n      this._firstConsistentlyInteractiveResolver = resolve;\n\n      if (document.readyState == 'complete') {\n        this.startSchedulingTimerTasks();\n      } else {\n        window.addEventListener('load', () => {\n          // You can use this to set a custom minimum value.\n          // this.setMinValue(20000);\n\n          this.startSchedulingTimerTasks();\n        });\n      }\n    });\n  }\n\n  /**\n   * Starts scheduling the timer that checks for network quiescence (a 5-second\n   * window of no more than 2 in-flight network requests).\n   */\n  startSchedulingTimerTasks() {\n    log(`Enabling FirstConsistentlyInteractiveDetector`);\n\n    this._scheduleTimerTasks = true;\n\n    const lastLongTaskEnd = this._longTasks.length > 0 ?\n        this._longTasks[this._longTasks.length - 1].end : 0;\n\n    const lastKnownNetwork2Busy =\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests);\n\n    this.rescheduleTimer(\n        Math.max(lastKnownNetwork2Busy + 5000, lastLongTaskEnd));\n  }\n\n  /**\n   * Setter for the `_minValue` property.\n   * @param {number} minValue\n   */\n  setMinValue(minValue) {\n    this._minValue = minValue;\n  }\n\n  /**\n   * Resets the timer that checks for network quiescence.\n   * @param {number} earliestTime A timestamp in ms, and the time is relative\n   *     to navigationStart.\n   */\n  rescheduleTimer(earliestTime) {\n    // Check if ready to start looking for firstConsistentlyInteractive\n    if (!this._scheduleTimerTasks) {\n      log(`startSchedulingTimerTasks must be called before ` +\n          `calling rescheduleTimer`);\n\n      return;\n    }\n\n    log(`Attempting to reschedule FirstConsistentlyInteractive ` +\n        `check to ${earliestTime}`);\n    log(`Previous timer activation time: ${this._timerActivationTime}`);\n\n    if (this._timerActivationTime > earliestTime) {\n      log(`Current activation time is greater than attempted ` +\n          `reschedule time. No need to postpone.`);\n\n      return;\n    }\n    clearTimeout(this._timerId);\n    this._timerId = setTimeout(() => {\n      this._checkTTI();\n    }, earliestTime - performance.now());\n    this._timerActivationTime = earliestTime;\n\n    log(`Rescheduled firstConsistentlyInteractive check at ${earliestTime}`);\n  }\n\n  /**\n   * Removes all timers and event listeners.\n   */\n  disable() {\n    log(`Disabling FirstConsistentlyInteractiveDetector`);\n\n    clearTimeout(this._timerId);\n    this._scheduleTimerTasks = false;\n    this._unregisterListeners();\n  }\n\n  /**\n   * Adds\n   */\n  _registerPerformanceObserver() {\n    this._performanceObserver = new PerformanceObserver((entryList) => {\n      const entries = entryList.getEntries();\n      for (const entry of entries) {\n        if (entry.entryType === 'resource') {\n          this._networkRequestFinishedCallback(entry);\n        }\n        if (entry.entryType === 'longtask') {\n          this._longTaskFinishedCallback(entry);\n        }\n      }\n    });\n    this._performanceObserver.observe({entryTypes: ['longtask', 'resource']});\n  }\n\n  /**\n   * Registers listeners to detect XHR, fetch, resource timing entries, and\n   * DOM mutations to detect long tasks and network quiescence.\n   */\n  _registerListeners() {\n    activityTrackerUtils.patchXMLHTTPRequest(\n        this._beforeJSInitiatedRequestCallback.bind(this),\n        this._afterJSInitiatedRequestCallback.bind(this));\n\n    activityTrackerUtils.patchFetch(\n        this._beforeJSInitiatedRequestCallback.bind(this),\n        this._afterJSInitiatedRequestCallback.bind(this));\n\n    this._registerPerformanceObserver();\n\n    if (this._useMutationObserver) {\n      this._mutationObserver =\n          activityTrackerUtils.observeResourceFetchingMutations(\n              this._mutationObserverCallback.bind(this));\n    }\n  }\n\n  /**\n   * Removes all added listeners.\n   */\n  _unregisterListeners() {\n    // We will leave the XHR / Fetch objects the way they were,\n    // since we cannot guarantee they were not modified further in between.\n    // Only unregister performance observers.\n    if (this._performanceObserver) this._performanceObserver.disconnect();\n    if (this._mutationObserver) this._mutationObserver.disconnect();\n  }\n\n  /**\n   * A callback to be run before any new XHR requests. This adds the request\n   * to a map so in-flight requests can be tracked.\n   * @param {string} requestId\n   */\n  _beforeJSInitiatedRequestCallback(requestId) {\n    log(`Starting JS initiated request. Request ID: ${requestId}`);\n\n    this._incompleteJSInitiatedRequestStartTimes.set(\n        requestId, performance.now());\n\n    log(`Active XHRs: ${this._incompleteJSInitiatedRequestStartTimes.size}`);\n  }\n\n  /**\n   * A callback to be run once any XHR requests have completed. This removes\n   * the request from the in-flight request map.\n   * @param {string} requestId\n   */\n  _afterJSInitiatedRequestCallback(requestId) {\n    log(`Completed JS initiated request with request ID: ${requestId}`);\n\n    this._incompleteJSInitiatedRequestStartTimes.delete(requestId);\n\n    log(`Active XHRs: ${this._incompleteJSInitiatedRequestStartTimes.size}`);\n  }\n\n  /**\n   * A callback to be run once new resource timing entries are observed.\n   * This adds the entry to an array and resets the timeout detecting the\n   * quiet window.\n   * @param {PerformanceEntry} performanceEntry\n   */\n  _networkRequestFinishedCallback(performanceEntry) {\n    log(`Network request finished`, performanceEntry);\n\n    this._networkRequests.push({\n      start: performanceEntry.fetchStart,\n      end: performanceEntry.responseEnd,\n    });\n    this.rescheduleTimer(\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests) + 5000);\n  }\n\n  /**\n   * A callback to be run once new long tasks are observed. This resets the\n   * timeout detecting the quiet window.\n   * @param {PerformanceEntry} performanceEntry\n   */\n  _longTaskFinishedCallback(performanceEntry) {\n    log(`Long task finished`, performanceEntry);\n\n    const taskEndTime = performanceEntry.startTime +\n          performanceEntry.duration;\n    this._longTasks.push({\n      start: performanceEntry.startTime,\n      end: taskEndTime,\n    });\n    this.rescheduleTimer(taskEndTime + 5000);\n  }\n\n  /**\n   * A callback to be run once any DOM elements are added that would initiate\n   * a new network request. This resets the timeout detecting the quiet window.\n   * @param {!MutationRecord} mutationRecord\n   */\n  _mutationObserverCallback(mutationRecord) {\n    log(`Potentially network resource fetching mutation detected`,\n        mutationRecord);\n\n    log(`Pushing back FirstConsistentlyInteractive check by 5 seconds.`);\n\n    this.rescheduleTimer(performance.now() + 5000);\n  }\n\n  /**\n   * Returns either a manually set min value or the time since\n   * domContentLoadedEventEnd and navigationStart. If the\n   * domContentLoadedEventEnd data isn't available, `null` is returned.\n   * @return {number|null}\n   */\n  _getMinValue() {\n    if (this._minValue) return this._minValue;\n\n    if (performance.timing.domContentLoadedEventEnd) {\n      const {domContentLoadedEventEnd, navigationStart} = performance.timing;\n      return domContentLoadedEventEnd - navigationStart;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets a list of all in-flight requests.\n   * @return {!Array}\n   */\n  get _incompleteRequestStarts() {\n    return [...this._incompleteJSInitiatedRequestStartTimes.values()];\n  }\n\n  /**\n   * Checks to see if a first consistently interactive time has been found.\n   * If one has been found, the promise resolver is invoked with the time. If\n   * no time has been found, the timeout detecting the quiet window is reset.\n   */\n  _checkTTI() {\n    log(`Checking if First Consistently Interactive was reached...`);\n\n    const navigationStart = performance.timing.navigationStart;\n    const lastBusy =\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests);\n\n    // First paint is not available in non-chrome browsers at the moment.\n    const firstPaint = window.chrome && window.chrome.loadTimes ?\n        (window.chrome.loadTimes().firstPaintTime * 1000 - navigationStart) : 0;\n\n    const searchStart = firstPaint || (\n        performance.timing.domContentLoadedEventEnd - navigationStart);\n\n    const minValue = this._getMinValue();\n    const currentTime = performance.now();\n\n    // Ideally we will only start scheduling timers after DOMContentLoaded and\n    // this case should never be hit.\n    if (minValue === null) {\n      log(`No usable minimum value yet. Postponing check.`);\n\n      this.rescheduleTimer(Math.max(lastBusy + 5000, currentTime + 1000));\n    }\n\n    log(`Parameter values:`);\n    log(`NavigationStart`, navigationStart);\n    log(`lastKnownNetwork2Busy`, lastBusy);\n    log(`Search Start`, searchStart);\n    log(`Min Value`, minValue);\n    log(`Last busy`, lastBusy);\n    log(`Current time`, currentTime);\n    log(`Long tasks`, this._longTasks);\n    log(`Incomplete JS Request Start Times`, this._incompleteRequestStarts);\n    log(`Network requests`, this._networkRequests);\n\n    const maybeFCI =\n        firstConsistentlyInteractiveCore.computeFirstConsistentlyInteractive(\n            searchStart, /** @type {number} */ (minValue), lastBusy,\n            currentTime, this._longTasks);\n\n    if (maybeFCI) {\n      this._firstConsistentlyInteractiveResolver(\n          /** @type {number} */ (maybeFCI));\n      this.disable();\n    }\n\n    // First Consistently Interactive was not reached for whatever reasons.\n    // Check again in one second. Eventually we should become confident enough\n    // in our scheduler logic to get rid of this step.\n    log(`Could not detect First Consistently Interactive. ` +\n        `Retrying in 1 second.`);\n\n    this.rescheduleTimer(performance.now() + 1000);\n  }\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global define, module */\n\n\nimport {getFirstConsistentlyInteractive} from './index.js';\n\n\nconst moduleExport = {getFirstConsistentlyInteractive};\n\n\nif (typeof module != 'undefined' && module.exports) {\n  module.exports = moduleExport;\n} else if (typeof define === 'function' && define.amd) {\n  define('ttiPolyfill', [], () => moduleExport);\n} else {\n  window.ttiPolyfill = moduleExport;\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nimport FirstConsistentlyInteractiveDetector\n    from './firstConsistentlyInteractiveDetector.js';\n\n\n/**\n * Returns a promise that resolves to the first consistently interactive time\n * (in milliseconds) or null if the browser doesn't support the features\n * required for detection.\n * @param {!FirstConsistentlyInteractiveDetectorInit=} opts Configuration\n *     options for the polyfill\n * @return {!Promise} TODO(philipwalton): for some reason the type\n *     {!Promise<(number|null)>} isn't working here, check if this is fixed in\n *     a new version of closure compiler.\n */\nexport const getFirstConsistentlyInteractive = (opts = {}) => {\n  if ('PerformanceLongTaskTiming' in window) {\n    const detector = new FirstConsistentlyInteractiveDetector(opts);\n    return detector.getFirstConsistentlyInteractive();\n  } else {\n    return Promise.resolve(null);\n  }\n};\n"]}